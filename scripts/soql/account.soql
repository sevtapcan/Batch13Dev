// Use .soql files to store SOQL queries.
// You can execute queries in VS Code by selecting the
//     query text and running the command:
//     SFDX: Execute SOQL Query with Currently Selected Text

SELECT Id, Name FROM Account
select id, name, phone from account where phone != null

SELECT id, name, Phone from Account

select id, name, project_name__c from Salesforce_Project__c

select id, name, mailingcity from contact where name like '%vi%'

SELECT Id, Name, Type, Industry FROM Account where industry = 'energy' LIMIT 1
select id, name, phone from account where phone !=null and accountnumber !=null
select id, name, phone from account where (phone!=null or website!=null) and accountnumber !=null
select id, name, subject__c, status__c, priority__c from Salesforce_Ticket__c where status__c != '' and priority__c='high'

select id, name, phone, annualrevenue, accountnumber, website from account where annualrevenue >30000000

select id, name, phone, annualrevenue, accountnumber, website from account where createddate>last_week


select id, name, phone, mailingcity from contact where mailingcity='paris' or mailingcity='new york'

//or do like this for multiple ones:
select id, name, phone, mailingcity from contact where mailingcity in ('paris', 'burlington', 'lawrence')

//child to parent
select id, name,  account.name from contact

select id, name, subject__, priority__c, Salesforce_project__r.project_name__c, Salesforce_project__r.status__c from Salesforce_Ticket__c


//

custom relationships
select id, name, subject__c, salesforce_project__r.project_name__c, salesforce_project__r.status__c from salesforce_ticket__c

//
parent to child:
select id, name, (select lastname from contacts) from account

select id, name, (select lastname , phone from contacts where phone != '') from account



select name, project_name__c,(select subject__c, priority__c, status__c from salesforce_tickets__r) from salesforce_project__c

//count method it soql

select count(ID) from contact
count return  records where the provided fields are not blank;

//aggregate functions
select sum(amount), stagename from opportunity group by stagename

select sum(amount), count(id), stagename from opportunity group by stagename

select count(id), name from account group by name having count(id)>1